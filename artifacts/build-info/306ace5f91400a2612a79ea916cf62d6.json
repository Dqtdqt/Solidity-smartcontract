{
	"id": "306ace5f91400a2612a79ea916cf62d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/21_FunctionExample.sol": {
				"content": "pragma solidity >=0.5 <0.9;\r\ncontract FunctionExample {\r\n    mapping (address => uint) public balanceAdddress;\r\n    \r\n    address payable owner;\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function getowner () public view returns (address) {\r\n        return owner;\r\n    }\r\n    \r\n    function receiveMoney () public payable{\r\n        assert (balanceAdddress[msg.sender] + msg.value >= balanceAdddress[msg.sender]);\r\n        balanceAdddress[msg.sender] += msg.value;\r\n    }\r\n    function withdraw (address payable _to, uint _amount) public {\r\n        require (balanceAdddress[msg.sender]>= _amount,\"not enough funds\");\r\n        balanceAdddress[msg.sender] -= _amount;\r\n        _to.transfer(_amount);\r\n    }\r\n    \r\n    function () external {\r\n        receiveMoney();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/21_FunctionExample.sol": {
				"FunctionExample": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceAdddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getowner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/21_FunctionExample.sol\":29:801  contract FunctionExample {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/21_FunctionExample.sol\":150:209  constructor () public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/21_FunctionExample.sol\":150:209  constructor () public {\r... */\n  pop\n    /* \"contracts/21_FunctionExample.sol\":191:201  msg.sender */\n  caller\n    /* \"contracts/21_FunctionExample.sol\":183:188  owner */\n  0x01\n  0x00\n    /* \"contracts/21_FunctionExample.sol\":183:201  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/21_FunctionExample.sol\":29:801  contract FunctionExample {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/21_FunctionExample.sol\":29:801  contract FunctionExample {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b168735\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6d26ec18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfe0174bd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/21_FunctionExample.sol\":29:801  contract FunctionExample {\r... */\n      pop\n        /* \"contracts/21_FunctionExample.sol\":776:790  receiveMoney() */\n      tag_9\n        /* \"contracts/21_FunctionExample.sol\":776:788  receiveMoney */\n      tag_10\n        /* \"contracts/21_FunctionExample.sol\":776:790  receiveMoney() */\n      jump\t// in\n    tag_9:\n        /* \"contracts/21_FunctionExample.sol\":29:801  contract FunctionExample {\r... */\n      stop\n        /* \"contracts/21_FunctionExample.sol\":61:109  mapping (address => uint) public balanceAdddress */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"contracts/21_FunctionExample.sol\":61:109  mapping (address => uint) public balanceAdddress */\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"contracts/21_FunctionExample.sol\":61:109  mapping (address => uint) public balanceAdddress */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/21_FunctionExample.sol\":311:499  function receiveMoney () public payable{\r... */\n    tag_3:\n      tag_15\n      tag_10\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/21_FunctionExample.sol\":505:732  function withdraw (address payable _to, uint _amount) public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/21_FunctionExample.sol\":505:732  function withdraw (address payable _to, uint _amount) public {\r... */\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/21_FunctionExample.sol\":505:732  function withdraw (address payable _to, uint _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/21_FunctionExample.sol\":217:299  function getowner () public view returns (address) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/21_FunctionExample.sol\":217:299  function getowner () public view returns (address) {\r... */\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/21_FunctionExample.sol\":311:499  function receiveMoney () public payable{\r... */\n    tag_10:\n        /* \"contracts/21_FunctionExample.sol\":412:427  balanceAdddress */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":412:439  balanceAdddress[msg.sender] */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":428:438  msg.sender */\n      caller\n        /* \"contracts/21_FunctionExample.sol\":412:439  balanceAdddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/21_FunctionExample.sol\":399:408  msg.value */\n      callvalue\n        /* \"contracts/21_FunctionExample.sol\":369:384  balanceAdddress */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":369:396  balanceAdddress[msg.sender] */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":385:395  msg.sender */\n      caller\n        /* \"contracts/21_FunctionExample.sol\":369:396  balanceAdddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/21_FunctionExample.sol\":369:408  balanceAdddress[msg.sender] + msg.value */\n      add\n        /* \"contracts/21_FunctionExample.sol\":369:439  balanceAdddress[msg.sender] + msg.value >= balanceAdddress[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/21_FunctionExample.sol\":361:440  assert (balanceAdddress[msg.sender] + msg.value >= balanceAdddress[msg.sender]) */\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"contracts/21_FunctionExample.sol\":482:491  msg.value */\n      callvalue\n        /* \"contracts/21_FunctionExample.sol\":451:466  balanceAdddress */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":451:478  balanceAdddress[msg.sender] */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":467:477  msg.sender */\n      caller\n        /* \"contracts/21_FunctionExample.sol\":451:478  balanceAdddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":451:491  balanceAdddress[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/21_FunctionExample.sol\":311:499  function receiveMoney () public payable{\r... */\n      jump\t// out\n        /* \"contracts/21_FunctionExample.sol\":61:109  mapping (address => uint) public balanceAdddress */\n    tag_14:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/21_FunctionExample.sol\":505:732  function withdraw (address payable _to, uint _amount) public {\r... */\n    tag_19:\n        /* \"contracts/21_FunctionExample.sol\":616:623  _amount */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":586:601  balanceAdddress */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":586:613  balanceAdddress[msg.sender] */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":602:612  msg.sender */\n      caller\n        /* \"contracts/21_FunctionExample.sol\":586:613  balanceAdddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/21_FunctionExample.sol\":586:623  balanceAdddress[msg.sender]>= _amount */\n      lt\n      iszero\n        /* \"contracts/21_FunctionExample.sol\":577:643  require (balanceAdddress[msg.sender]>= _amount,\"not enough funds\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682066756e647300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/21_FunctionExample.sol\":685:692  _amount */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":654:669  balanceAdddress */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":654:681  balanceAdddress[msg.sender] */\n      dup1\n        /* \"contracts/21_FunctionExample.sol\":670:680  msg.sender */\n      caller\n        /* \"contracts/21_FunctionExample.sol\":654:681  balanceAdddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":654:692  balanceAdddress[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/21_FunctionExample.sol\":703:706  _to */\n      dup2\n        /* \"contracts/21_FunctionExample.sol\":703:715  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/21_FunctionExample.sol\":703:724  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/21_FunctionExample.sol\":716:723  _amount */\n      dup3\n        /* \"contracts/21_FunctionExample.sol\":703:724  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/21_FunctionExample.sol\":703:724  _to.transfer(_amount) */\n      pop\n        /* \"contracts/21_FunctionExample.sol\":505:732  function withdraw (address payable _to, uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/21_FunctionExample.sol\":217:299  function getowner () public view returns (address) {\r... */\n    tag_22:\n        /* \"contracts/21_FunctionExample.sol\":259:266  address */\n      0x00\n        /* \"contracts/21_FunctionExample.sol\":286:291  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/21_FunctionExample.sol\":279:291  return owner */\n      swap1\n      pop\n        /* \"contracts/21_FunctionExample.sol\":217:299  function getowner () public view returns (address) {\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820eb0e50d376476f90800d76a615689e9edd5501ee6ac158bbe910601d5fddeb6c64736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061040f806100616000396000f3fe60806040526004361061003f5760003560e01c80635b168735146100565780636d26ec18146100bb578063f3fef3a3146100c5578063fe0174bd14610120575b34801561004b57600080fd5b50610054610177565b005b34801561006257600080fd5b506100a56004803603602081101561007957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024d565b6040518082815260200191505060405180910390f35b6100c3610177565b005b3480156100d157600080fd5b5061011e600480360360408110156100e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610265565b005b34801561012c57600080fd5b506101356103b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156101ff57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610319576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103ab573d6000803e3d6000fd5b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509056fea265627a7a72315820eb0e50d376476f90800d76a615689e9edd5501ee6ac158bbe910601d5fddeb6c64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x40F DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B168735 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xFE0174BD EQ PUSH2 0x120 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x1FF JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEB 0xE POP 0xD3 PUSH23 0x476F90800D76A615689E9EDD5501EE6AC158BBE910601D 0x5F 0xDD 0xEB PUSH13 0x64736F6C634300050D00320000 ",
							"sourceMap": "29:772:0:-;;;150:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:59:0;191:10;183:5;;:18;;;;;;;;;;;;;;;;;;29:772;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c80635b168735146100565780636d26ec18146100bb578063f3fef3a3146100c5578063fe0174bd14610120575b34801561004b57600080fd5b50610054610177565b005b34801561006257600080fd5b506100a56004803603602081101561007957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061024d565b6040518082815260200191505060405180910390f35b6100c3610177565b005b3480156100d157600080fd5b5061011e600480360360408110156100e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610265565b005b34801561012c57600080fd5b506101356103b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156101ff57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610319576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103ab573d6000803e3d6000fd5b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509056fea265627a7a72315820eb0e50d376476f90800d76a615689e9edd5501ee6ac158bbe910601d5fddeb6c64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B168735 EQ PUSH2 0x56 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xFE0174BD EQ PUSH2 0x120 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x54 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x1FF JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEB 0xE POP 0xD3 PUSH23 0x476F90800D76A615689E9EDD5501EE6AC158BBE910601D 0x5F 0xDD 0xEB PUSH13 0x64736F6C634300050D00320000 ",
							"sourceMap": "29:772:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29:772:0;776:14;:12;:14::i;:::-;29:772;61:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;61:48:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;311:188;;;:::i;:::-;;505:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:227:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;505:227:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;217:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:82:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;311:188;412:15;:27;428:10;412:27;;;;;;;;;;;;;;;;399:9;369:15;:27;385:10;369:27;;;;;;;;;;;;;;;;:39;:70;;361:79;;;;482:9;451:15;:27;467:10;451:27;;;;;;;;;;;;;;;;:40;;;;;;;;;;;311:188::o;61:48::-;;;;;;;;;;;;;;;;;:::o;505:227::-;616:7;586:15;:27;602:10;586:27;;;;;;;;;;;;;;;;:37;;577:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:7;654:15;:27;670:10;654:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;703:3;:12;;:21;716:7;703:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;703:21:0;505:227;;:::o;217:82::-;259:7;286:5;;;;;;;;;;;279:12;;217:82;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "207800",
								"executionCost": "20517",
								"totalCost": "228317"
							},
							"external": {
								"": "21118",
								"balanceAdddress(address)": "547",
								"getowner()": "505",
								"receiveMoney()": "21050",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "MSTORE"
								},
								{
									"begin": 150,
									"end": 209,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 209,
									"name": "POP"
								},
								{
									"begin": 191,
									"end": 201,
									"name": "CALLER"
								},
								{
									"begin": 183,
									"end": 188,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 183,
									"end": 188,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "EXP"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "DUP2"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "SLOAD"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "DUP2"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "MUL"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "NOT"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "AND"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "SWAP1"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "DUP4"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "AND"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "MUL"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "OR"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "SWAP1"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "SSTORE"
								},
								{
									"begin": 183,
									"end": 201,
									"name": "POP"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "DUP1"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "CODECOPY"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 801,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820eb0e50d376476f90800d76a615689e9edd5501ee6ac158bbe910601d5fddeb6c64736f6c634300050d0032",
									".code": [
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "MSTORE"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "LT"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "SHR"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "5B168735"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "6D26EC18"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "F3FEF3A3"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH",
											"value": "FE0174BD"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "POP"
										},
										{
											"begin": 776,
											"end": 790,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 776,
											"end": 788,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 776,
											"end": 790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 790,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 776,
											"end": 790,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 801,
											"name": "STOP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "AND"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP3"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "MLOAD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP3"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "MLOAD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SUB"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "RETURN"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "STOP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "AND"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP3"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP3"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "JUMPDEST"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "STOP"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "RETURN"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 412,
											"end": 427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP1"
										},
										{
											"begin": 428,
											"end": 438,
											"name": "CALLER"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "AND"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "AND"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SWAP1"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "KECCAK256"
										},
										{
											"begin": 412,
											"end": 439,
											"name": "SLOAD"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "CALLVALUE"
										},
										{
											"begin": 369,
											"end": 384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 395,
											"name": "CALLER"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "KECCAK256"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SLOAD"
										},
										{
											"begin": 369,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 439,
											"name": "LT"
										},
										{
											"begin": 369,
											"end": 439,
											"name": "ISZERO"
										},
										{
											"begin": 361,
											"end": 440,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 361,
											"end": 440,
											"name": "JUMPI"
										},
										{
											"begin": 361,
											"end": 440,
											"name": "INVALID"
										},
										{
											"begin": 361,
											"end": 440,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 361,
											"end": 440,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 491,
											"name": "CALLVALUE"
										},
										{
											"begin": 451,
											"end": 466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 477,
											"name": "CALLER"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "AND"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "AND"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "DUP2"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "MSTORE"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "ADD"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "SWAP1"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "DUP2"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "MSTORE"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "ADD"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "KECCAK256"
										},
										{
											"begin": 451,
											"end": 478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP3"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP3"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SLOAD"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "ADD"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP3"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "DUP2"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "SSTORE"
										},
										{
											"begin": 451,
											"end": 491,
											"name": "POP"
										},
										{
											"begin": 311,
											"end": 499,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "KECCAK256"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "SLOAD"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 61,
											"end": 109,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "JUMPDEST"
										},
										{
											"begin": 616,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 586,
											"end": 601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 602,
											"end": 612,
											"name": "CALLER"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "DUP2"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "ADD"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "SWAP1"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "DUP2"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "ADD"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "KECCAK256"
										},
										{
											"begin": 586,
											"end": 613,
											"name": "SLOAD"
										},
										{
											"begin": 586,
											"end": 623,
											"name": "LT"
										},
										{
											"begin": 586,
											"end": 623,
											"name": "ISZERO"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "JUMPI"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP3"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "SUB"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP3"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "6E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "SUB"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "REVERT"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 577,
											"end": 643,
											"name": "JUMPDEST"
										},
										{
											"begin": 685,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "MSTORE"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "ADD"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "KECCAK256"
										},
										{
											"begin": 654,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "SLOAD"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "SUB"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "SWAP3"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "SSTORE"
										},
										{
											"begin": 654,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 703,
											"end": 715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 703,
											"end": 715,
											"name": "AND"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 716,
											"end": 723,
											"name": "DUP3"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "SWAP1"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP2"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "ISZERO"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "MUL"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "SWAP1"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "MLOAD"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "MLOAD"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP1"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP4"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "SUB"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP2"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP6"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP9"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "DUP9"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "CALL"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "SWAP4"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 703,
											"end": 724,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 732,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "JUMPDEST"
										},
										{
											"begin": 259,
											"end": 266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SLOAD"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "EXP"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "DIV"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 286,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 279,
											"end": 291,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 291,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 299,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceAdddress(address)": "5b168735",
							"getowner()": "fe0174bd",
							"receiveMoney()": "6d26ec18",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceAdddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getowner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/21_FunctionExample.sol\":\"FunctionExample\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/21_FunctionExample.sol\":{\"keccak256\":\"0x745664e68735c41dcdbed9d58a37e4d3d89a320b5ccfc30518b52dbf8a8549b0\",\"urls\":[\"bzz-raw://b6e6df8b214742adda631b68cbbe134d9af50473ec5c346425defa4c05e25b90\",\"dweb:/ipfs/QmeBXpEQHS1EX6B2DkxtsaT3prKpeXjf3Nt4WKo9xCv2HG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/21_FunctionExample.sol:FunctionExample",
								"label": "balanceAdddress",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "contracts/21_FunctionExample.sol:FunctionExample",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/21_FunctionExample.sol": {
				"ast": {
					"absolutePath": "contracts/21_FunctionExample.sol",
					"exportedSymbols": {
						"FunctionExample": [
							90
						]
					},
					"id": 91,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:27:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "FunctionExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceAdddress",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "61:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "70:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "61:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "81:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "122:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "122:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "172:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "183:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "191:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "183:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "183:18:0"
											}
										]
									},
									"documentation": null,
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:0:0"
									},
									"scope": 90,
									"src": "150:59:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "268:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 21,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 20,
												"id": 22,
												"nodeType": "Return",
												"src": "279:12:0"
											}
										]
									},
									"documentation": null,
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getowner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "258:9:0"
									},
									"scope": 90,
									"src": "217:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "350:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 28,
																		"name": "balanceAdddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "369:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 31,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 29,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "385:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "385:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "369:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 32,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "399:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "399:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "369:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 35,
																	"name": "balanceAdddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "412:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 38,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 36,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "428:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "428:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "412:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "369:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "361:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "361:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "361:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 42,
															"name": "balanceAdddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "451:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 45,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "467:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "467:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "451:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "482:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "482:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "451:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "451:40:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:0:0"
									},
									"scope": 90,
									"src": "311:188:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "566:166:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 59,
																	"name": "balanceAdddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "586:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 62,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 60,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "602:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "602:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "586:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "586:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682066756e6473",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "624:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															},
															"value": "not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															109
														],
														"referencedDeclaration": 109,
														"src": "577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "577:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 68,
															"name": "balanceAdddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "654:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 71,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "670:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "670:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "654:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "685:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "654:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "654:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 78,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 75,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "703:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "703:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "703:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "703:21:0"
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "524:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "545:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "545:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "523:35:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:0"
									},
									"scope": 90,
									"src": "505:227:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "765:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 85,
														"name": "receiveMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "776:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "776:14:0"
											}
										]
									},
									"documentation": null,
									"id": 89,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:0"
									},
									"scope": 90,
									"src": "744:54:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 91,
							"src": "29:772:0"
						}
					],
					"src": "0:801:0"
				},
				"id": 0
			}
		}
	}
}