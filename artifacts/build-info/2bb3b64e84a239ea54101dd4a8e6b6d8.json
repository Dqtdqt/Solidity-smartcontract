{
	"id": "2bb3b64e84a239ea54101dd4a8e6b6d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/25_eventExample.sol": {
				"content": "pragma solidity >=0.5 <0.9;\r\ncontract eventExample {\r\n    mapping (address => uint) public tokenBalance;\r\n    event tokenTransation (address _sender, address _to, uint _amount);\r\n    address owner;\r\n    constructor () public{\r\n        owner == msg.sender;\r\n        tokenBalance[owner] = 100;\r\n    }\r\n    function sendToken (address payable _to, uint _amount) public {\r\n        require (tokenBalance[msg.sender]>=_amount,\"not enough funds\");\r\n        assert (tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender]);\r\n        assert (tokenBalance[_to] + _amount >= tokenBalance[_to]);\r\n        tokenBalance[msg.sender] -= _amount ; tokenBalance[_to]+= _amount;\r\n        emit tokenTransation (msg.sender, _to, _amount);\r\n    }\r\n\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/25_eventExample.sol": {
				"eventExample": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "tokenTransation",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/25_eventExample.sol\":29:744  contract eventExample {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/25_eventExample.sol\":203:298  constructor () public{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/25_eventExample.sol\":203:298  constructor () public{\r... */\n  pop\n    /* \"contracts/25_eventExample.sol\":244:254  msg.sender */\n  caller\n    /* \"contracts/25_eventExample.sol\":235:254  owner == msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/25_eventExample.sol\":235:240  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  pop\n  pop\n    /* \"contracts/25_eventExample.sol\":235:254  owner == msg.sender */\n  pop\n    /* \"contracts/25_eventExample.sol\":287:290  100 */\n  0x64\n    /* \"contracts/25_eventExample.sol\":265:277  tokenBalance */\n  0x00\n    /* \"contracts/25_eventExample.sol\":265:284  tokenBalance[owner] */\n  dup1\n    /* \"contracts/25_eventExample.sol\":278:283  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/25_eventExample.sol\":265:284  tokenBalance[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/25_eventExample.sol\":265:290  tokenBalance[owner] = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/25_eventExample.sol\":29:744  contract eventExample {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/25_eventExample.sol\":29:744  contract eventExample {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/25_eventExample.sol\":29:744  contract eventExample {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x412664ae\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeedc966a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/25_eventExample.sol\":304:731  function sendToken (address payable _to, uint _amount) public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"contracts/25_eventExample.sol\":304:731  function sendToken (address payable _to, uint _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/25_eventExample.sol\":58:103  mapping (address => uint) public tokenBalance */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"contracts/25_eventExample.sol\":58:103  mapping (address => uint) public tokenBalance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/25_eventExample.sol\":304:731  function sendToken (address payable _to, uint _amount) public {\r... */\n    tag_7:\n        /* \"contracts/25_eventExample.sol\":412:419  _amount */\n      dup1\n        /* \"contracts/25_eventExample.sol\":386:398  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":386:410  tokenBalance[msg.sender] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":399:409  msg.sender */\n      caller\n        /* \"contracts/25_eventExample.sol\":386:410  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/25_eventExample.sol\":386:419  tokenBalance[msg.sender]>=_amount */\n      lt\n      iszero\n        /* \"contracts/25_eventExample.sol\":377:439  require (tokenBalance[msg.sender]>=_amount,\"not enough funds\") */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682066756e647300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"contracts/25_eventExample.sol\":496:508  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":496:520  tokenBalance[msg.sender] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":509:519  msg.sender */\n      caller\n        /* \"contracts/25_eventExample.sol\":496:520  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/25_eventExample.sol\":485:492  _amount */\n      dup2\n        /* \"contracts/25_eventExample.sol\":458:470  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":458:482  tokenBalance[msg.sender] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":471:481  msg.sender */\n      caller\n        /* \"contracts/25_eventExample.sol\":458:482  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/25_eventExample.sol\":458:492  tokenBalance[msg.sender] - _amount */\n      sub\n        /* \"contracts/25_eventExample.sol\":458:520  tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/25_eventExample.sol\":450:521  assert (tokenBalance[msg.sender] - _amount <= tokenBalance[msg.sender]) */\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n        /* \"contracts/25_eventExample.sol\":571:583  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":571:588  tokenBalance[_to] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":584:587  _to */\n      dup4\n        /* \"contracts/25_eventExample.sol\":571:588  tokenBalance[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/25_eventExample.sol\":560:567  _amount */\n      dup2\n        /* \"contracts/25_eventExample.sol\":540:552  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":540:557  tokenBalance[_to] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":553:556  _to */\n      dup6\n        /* \"contracts/25_eventExample.sol\":540:557  tokenBalance[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/25_eventExample.sol\":540:567  tokenBalance[_to] + _amount */\n      add\n        /* \"contracts/25_eventExample.sol\":540:588  tokenBalance[_to] + _amount >= tokenBalance[_to] */\n      lt\n      iszero\n        /* \"contracts/25_eventExample.sol\":532:589  assert (tokenBalance[_to] + _amount >= tokenBalance[_to]) */\n      tag_14\n      jumpi\n      invalid\n    tag_14:\n        /* \"contracts/25_eventExample.sol\":628:635  _amount */\n      dup1\n        /* \"contracts/25_eventExample.sol\":600:612  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":600:624  tokenBalance[msg.sender] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":613:623  msg.sender */\n      caller\n        /* \"contracts/25_eventExample.sol\":600:624  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/25_eventExample.sol\":600:635  tokenBalance[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/25_eventExample.sol\":658:665  _amount */\n      dup1\n        /* \"contracts/25_eventExample.sol\":638:650  tokenBalance */\n      0x00\n        /* \"contracts/25_eventExample.sol\":638:655  tokenBalance[_to] */\n      dup1\n        /* \"contracts/25_eventExample.sol\":651:654  _to */\n      dup5\n        /* \"contracts/25_eventExample.sol\":638:655  tokenBalance[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/25_eventExample.sol\":638:665  tokenBalance[_to]+= _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/25_eventExample.sol\":681:723  tokenTransation (msg.sender, _to, _amount) */\n      0xf887a48e500d14a584e2d83c8dc4f167643cdc1be1e8096083ebad087b0d273a\n        /* \"contracts/25_eventExample.sol\":698:708  msg.sender */\n      caller\n        /* \"contracts/25_eventExample.sol\":710:713  _to */\n      dup4\n        /* \"contracts/25_eventExample.sol\":715:722  _amount */\n      dup4\n        /* \"contracts/25_eventExample.sol\":681:723  tokenTransation (msg.sender, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/25_eventExample.sol\":304:731  function sendToken (address payable _to, uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/25_eventExample.sol\":58:103  mapping (address => uint) public tokenBalance */\n    tag_10:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820eec528f6b94a5865166d5dca04c8316ee92df5e5a0f9ed0aaa6ad33e3ab3a78e64736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a905050506064600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061042d806100ac6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063412664ae1461003b578063eedc966a14610089575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100e1565b005b6100cb6004803603602081101561009f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103e0565b6040518082815260200191505060405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610195576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403111561021d57fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156102a557fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507ff887a48e500d14a584e2d83c8dc4f167643cdc1be1e8096083ebad087b0d273a338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000602052806000526040600020600091509050548156fea265627a7a72315820eec528f6b94a5865166d5dca04c8316ee92df5e5a0f9ed0aaa6ad33e3ab3a78e64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x64 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x42D DUP1 PUSH2 0xAC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x412664AE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB GT ISZERO PUSH2 0x21D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x2A5 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF887A48E500D14A584E2D83C8DC4F167643CDC1BE1E8096083EBAD087B0D273A CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEE 0xC5 0x28 0xF6 0xB9 0x4A PC PUSH6 0x166D5DCA04C8 BALANCE PUSH15 0xE92DF5E5A0F9ED0AAA6AD33E3AB3A7 DUP15 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "29:715:0:-;;;203:95;8:9:-1;5:2;;;30:1;27;20:12;5:2;203:95:0;244:10;235:19;;:5;;;;;;;;;;:19;287:3;265:12;:19;278:5;;;;;;;;;;;265:19;;;;;;;;;;;;;;;:25;;;;29:715;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063412664ae1461003b578063eedc966a14610089575b600080fd5b6100876004803603604081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506100e1565b005b6100cb6004803603602081101561009f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103e0565b6040518082815260200191505060405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610195576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403111561021d57fe5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156102a557fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507ff887a48e500d14a584e2d83c8dc4f167643cdc1be1e8096083ebad087b0d273a338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000602052806000526040600020600091509050548156fea265627a7a72315820eec528f6b94a5865166d5dca04c8316ee92df5e5a0f9ed0aaa6ad33e3ab3a78e64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x412664AE EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB GT ISZERO PUSH2 0x21D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD LT ISZERO PUSH2 0x2A5 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xF887A48E500D14A584E2D83C8DC4F167643CDC1BE1E8096083EBAD087B0D273A CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEE 0xC5 0x28 0xF6 0xB9 0x4A PC PUSH6 0x166D5DCA04C8 BALANCE PUSH15 0xE92DF5E5A0F9ED0AAA6AD33E3AB3A7 DUP15 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "29:715:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29:715:0;;;;;;;;;;;;;;;;;;;;;;;;304:427;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;304:427:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;58:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58:45:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;304:427;412:7;386:12;:24;399:10;386:24;;;;;;;;;;;;;;;;:33;;377:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:12;:24;509:10;496:24;;;;;;;;;;;;;;;;485:7;458:12;:24;471:10;458:24;;;;;;;;;;;;;;;;:34;:62;;450:71;;;;571:12;:17;584:3;571:17;;;;;;;;;;;;;;;;560:7;540:12;:17;553:3;540:17;;;;;;;;;;;;;;;;:27;:48;;532:57;;;;628:7;600:12;:24;613:10;600:24;;;;;;;;;;;;;;;;:35;;;;;;;;;;;658:7;638:12;:17;651:3;638:17;;;;;;;;;;;;;;;;:27;;;;;;;;;;;681:42;698:10;710:3;715:7;681:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:427;;:::o;58:45::-;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "213800",
								"executionCost": "20839",
								"totalCost": "234639"
							},
							"external": {
								"sendToken(address,uint256)": "44071",
								"tokenBalance(address)": "569"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "MSTORE"
								},
								{
									"begin": 203,
									"end": 298,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 203,
									"end": 298,
									"name": "POP"
								},
								{
									"begin": 244,
									"end": 254,
									"name": "CALLER"
								},
								{
									"begin": 235,
									"end": 254,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 235,
									"end": 254,
									"name": "AND"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "SWAP1"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "SLOAD"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "SWAP1"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "EXP"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "SWAP1"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "POP"
								},
								{
									"begin": 235,
									"end": 240,
									"name": "POP"
								},
								{
									"begin": 235,
									"end": 254,
									"name": "POP"
								},
								{
									"begin": 287,
									"end": 290,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 265,
									"end": 277,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "DUP1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "SWAP1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "SLOAD"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "SWAP1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "EXP"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "SWAP1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DIV"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "AND"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "AND"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "AND"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "MSTORE"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "ADD"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "SWAP1"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "MSTORE"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "ADD"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "KECCAK256"
								},
								{
									"begin": 265,
									"end": 290,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 290,
									"name": "SWAP1"
								},
								{
									"begin": 265,
									"end": 290,
									"name": "SSTORE"
								},
								{
									"begin": 265,
									"end": 290,
									"name": "POP"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "DUP1"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "CODECOPY"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 744,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820eec528f6b94a5865166d5dca04c8316ee92df5e5a0f9ed0aaa6ad33e3ab3a78e64736f6c634300050d0032",
									".code": [
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "MSTORE"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "POP"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "LT"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "SHR"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "412664AE"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "EEDC966A"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 744,
											"name": "REVERT"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "AND"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP3"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP3"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "STOP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP3"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "MLOAD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP3"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "ADD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "MLOAD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SUB"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "RETURN"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP1"
										},
										{
											"begin": 399,
											"end": 409,
											"name": "CALLER"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "AND"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "AND"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "ADD"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "ADD"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "KECCAK256"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SLOAD"
										},
										{
											"begin": 386,
											"end": 419,
											"name": "LT"
										},
										{
											"begin": 386,
											"end": 419,
											"name": "ISZERO"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPI"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MLOAD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP1"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP1"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SUB"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP1"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "6E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "POP"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "POP"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "POP"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "MLOAD"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "DUP1"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP2"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SUB"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "SWAP1"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "REVERT"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 377,
											"end": 439,
											"name": "JUMPDEST"
										},
										{
											"begin": 496,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "DUP1"
										},
										{
											"begin": 509,
											"end": 519,
											"name": "CALLER"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "AND"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "AND"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "DUP2"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "MSTORE"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "ADD"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "DUP2"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "MSTORE"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "ADD"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "KECCAK256"
										},
										{
											"begin": 496,
											"end": 520,
											"name": "SLOAD"
										},
										{
											"begin": 485,
											"end": 492,
											"name": "DUP2"
										},
										{
											"begin": 458,
											"end": 470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 471,
											"end": 481,
											"name": "CALLER"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "AND"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "AND"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "KECCAK256"
										},
										{
											"begin": 458,
											"end": 482,
											"name": "SLOAD"
										},
										{
											"begin": 458,
											"end": 492,
											"name": "SUB"
										},
										{
											"begin": 458,
											"end": 520,
											"name": "GT"
										},
										{
											"begin": 458,
											"end": 520,
											"name": "ISZERO"
										},
										{
											"begin": 450,
											"end": 521,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 450,
											"end": 521,
											"name": "JUMPI"
										},
										{
											"begin": 450,
											"end": 521,
											"name": "INVALID"
										},
										{
											"begin": 450,
											"end": 521,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 450,
											"end": 521,
											"name": "JUMPDEST"
										},
										{
											"begin": 571,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 587,
											"name": "DUP4"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "AND"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP1"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "MSTORE"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "ADD"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "KECCAK256"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SLOAD"
										},
										{
											"begin": 560,
											"end": 567,
											"name": "DUP2"
										},
										{
											"begin": 540,
											"end": 552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 553,
											"end": 556,
											"name": "DUP6"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "AND"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "AND"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "MSTORE"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "ADD"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "SWAP1"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "MSTORE"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "ADD"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "KECCAK256"
										},
										{
											"begin": 540,
											"end": 557,
											"name": "SLOAD"
										},
										{
											"begin": 540,
											"end": 567,
											"name": "ADD"
										},
										{
											"begin": 540,
											"end": 588,
											"name": "LT"
										},
										{
											"begin": 540,
											"end": 588,
											"name": "ISZERO"
										},
										{
											"begin": 532,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 532,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 589,
											"name": "INVALID"
										},
										{
											"begin": 532,
											"end": 589,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 532,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 635,
											"name": "DUP1"
										},
										{
											"begin": 600,
											"end": 612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "DUP1"
										},
										{
											"begin": 613,
											"end": 623,
											"name": "CALLER"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "AND"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "AND"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "SWAP1"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "MSTORE"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "ADD"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "KECCAK256"
										},
										{
											"begin": 600,
											"end": 624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP3"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SLOAD"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SUB"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP3"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "DUP2"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SWAP1"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "SSTORE"
										},
										{
											"begin": 600,
											"end": 635,
											"name": "POP"
										},
										{
											"begin": 658,
											"end": 665,
											"name": "DUP1"
										},
										{
											"begin": 638,
											"end": 650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 654,
											"name": "DUP5"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "KECCAK256"
										},
										{
											"begin": 638,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "DUP3"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "DUP3"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "SLOAD"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "ADD"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "SWAP3"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "DUP2"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "SWAP1"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "SSTORE"
										},
										{
											"begin": 638,
											"end": 665,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "F887A48E500D14A584E2D83C8DC4F167643CDC1BE1E8096083EBAD087B0D273A"
										},
										{
											"begin": 698,
											"end": 708,
											"name": "CALLER"
										},
										{
											"begin": 710,
											"end": 713,
											"name": "DUP4"
										},
										{
											"begin": 715,
											"end": 722,
											"name": "DUP4"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "MLOAD"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP1"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP5"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "MSTORE"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "ADD"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP4"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "AND"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "MSTORE"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "ADD"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP3"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "MSTORE"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "ADD"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "SWAP4"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "MLOAD"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP1"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "SWAP2"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "SUB"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "SWAP1"
										},
										{
											"begin": 681,
											"end": 723,
											"name": "LOG1"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "KECCAK256"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "POP"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "SLOAD"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "DUP2"
										},
										{
											"begin": 58,
											"end": 103,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sendToken(address,uint256)": "412664ae",
							"tokenBalance(address)": "eedc966a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tokenTransation\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/25_eventExample.sol\":\"eventExample\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/25_eventExample.sol\":{\"keccak256\":\"0x8aee7f9542a2dc16ab5ae7a159e26182fe9c69e55463840ad14bf6c047d7bca5\",\"urls\":[\"bzz-raw://235ebadbdee898318feaba9b4c50a7f0f18451cad0675f60bbc4b053898b6390\",\"dweb:/ipfs/QmdjZcbF6oWrQwUWe5jScUBqJr8MwCqb8Wo2oq2U3A1Jos\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/25_eventExample.sol:eventExample",
								"label": "tokenBalance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 15,
								"contract": "contracts/25_eventExample.sol:eventExample",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/25_eventExample.sol": {
				"ast": {
					"absolutePath": "contracts/25_eventExample.sol",
					"exportedSymbols": {
						"eventExample": [
							95
						]
					},
					"id": 96,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:27:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "eventExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "tokenBalance",
									"nodeType": "VariableDeclaration",
									"scope": 95,
									"src": "58:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "58:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "78:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "tokenTransation",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "150:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "163:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "132:44:0"
									},
									"src": "110:67:0"
								},
								{
									"constant": false,
									"id": 15,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 95,
									"src": "183:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "224:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 18,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "235:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "244:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "244:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "235:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "235:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 23,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "265:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 25,
														"indexExpression": {
															"argumentTypes": null,
															"id": 24,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "265:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "287:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "265:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "265:25:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:0"
									},
									"scope": 95,
									"src": "203:95:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "366:365:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 38,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "386:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 41,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 39,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "399:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "399:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "386:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "386:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682066756e6473",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "420:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															},
															"value": "not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															114
														],
														"referencedDeclaration": 114,
														"src": "377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "377:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "377:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 48,
																		"name": "tokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "458:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 51,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 49,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "471:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "471:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "458:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 52,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "458:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "496:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 57,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 55,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "509:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "509:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "496:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "458:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 47,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "450:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "450:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "450:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 62,
																		"name": "tokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "540:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 64,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "553:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "540:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "540:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "571:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 69,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 68,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "584:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "571:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "540:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "532:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "532:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 73,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "600:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 74,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "613:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "613:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "600:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "600:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "600:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 80,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "638:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 82,
														"indexExpression": {
															"argumentTypes": null,
															"id": 81,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "651:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "638:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "638:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "638:27:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "698:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "698:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 89,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 90,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 86,
														"name": "tokenTransation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "681:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "EmitStatement",
												"src": "676:47:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "324:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "324:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "345:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "323:35:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:0:0"
									},
									"scope": 95,
									"src": "304:427:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 96,
							"src": "29:715:0"
						}
					],
					"src": "0:744:0"
				},
				"id": 0
			}
		}
	}
}