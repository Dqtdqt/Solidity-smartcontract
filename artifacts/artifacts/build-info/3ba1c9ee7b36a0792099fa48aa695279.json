{
	"id": "3ba1c9ee7b36a0792099fa48aa695279",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/artifacts/struct.sol": {
				"content": "pragma solidity ^0.5.13;\r\ncontract mappingStruct {\r\n    mapping (address => Balance) balanceReceive;\r\n    struct Payment {\r\n        uint amount;\r\n        uint timestam;\r\n    }\r\n    struct Balance {\r\n        uint totalBalance;\r\n        uint numpayment;\r\n        mapping (uint => Payment) payments;\r\n    }\r\n    function receiveMoney () public payable {\r\n        balanceReceive[msg.sender].totalBalance += msg.value;\r\n        Payment memory payment = Payment(msg.value,now);\r\n        balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment]=payment;\r\n        balanceReceive[msg.sender].numpayment ++;\r\n    }\r\n    function withdrawMoney (address payable _to, uint _amount) public {\r\n        require(balanceReceive[msg.sender].totalBalance >= _amount,\"not enough funds\" );\r\n        balanceReceive[msg.sender].totalBalance -= _amount;\r\n        _to.transfer(_amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/artifacts/struct.sol": {
				"mappingStruct": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/artifacts/struct.sol\":26:888  contract mappingStruct {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/artifacts/struct.sol\":26:888  contract mappingStruct {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/artifacts/struct.sol\":26:888  contract mappingStruct {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d26ec18\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/artifacts/struct.sol\":309:622  function receiveMoney () public payable {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/artifacts/struct.sol\":628:885  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/artifacts/struct.sol\":628:885  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/artifacts/struct.sol\":628:885  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/artifacts/struct.sol\":309:622  function receiveMoney () public payable {\r... */\n    tag_5:\n        /* \"contracts/artifacts/struct.sol\":403:412  msg.value */\n      callvalue\n        /* \"contracts/artifacts/struct.sol\":360:374  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":360:386  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":375:385  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":360:386  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":360:399  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":360:412  balanceReceive[msg.sender].totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":423:445  Payment memory payment */\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"contracts/artifacts/struct.sol\":448:470  Payment(msg.value,now) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/artifacts/struct.sol\":456:465  msg.value */\n      callvalue\n        /* \"contracts/artifacts/struct.sol\":448:470  Payment(msg.value,now) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/artifacts/struct.sol\":466:469  now */\n      timestamp\n        /* \"contracts/artifacts/struct.sol\":448:470  Payment(msg.value,now) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":423:470  Payment memory payment = Payment(msg.value,now) */\n      swap1\n      pop\n        /* \"contracts/artifacts/struct.sol\":556:563  payment */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":481:495  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":481:507  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":496:506  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":481:507  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":481:516  balanceReceive[msg.sender].payments */\n      0x02\n      add\n        /* \"contracts/artifacts/struct.sol\":481:555  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment] */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":517:531  balanceReceive */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":517:543  balanceReceive[msg.sender] */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":532:542  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":517:543  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":517:554  balanceReceive[msg.sender].numpayment */\n      0x01\n      add\n      sload\n        /* \"contracts/artifacts/struct.sol\":481:555  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":481:563  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment]=payment */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/artifacts/struct.sol\":574:588  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":574:600  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":589:599  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":574:600  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":574:611  balanceReceive[msg.sender].numpayment */\n      0x01\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":574:614  balanceReceive[msg.sender].numpayment ++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":309:622  function receiveMoney () public payable {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/artifacts/struct.sol\":628:885  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n    tag_9:\n        /* \"contracts/artifacts/struct.sol\":756:763  _amount */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":713:727  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":713:739  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":728:738  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":713:739  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":713:752  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      sload\n        /* \"contracts/artifacts/struct.sol\":713:763  balanceReceive[msg.sender].totalBalance >= _amount */\n      lt\n      iszero\n        /* \"contracts/artifacts/struct.sol\":705:784  require(balanceReceive[msg.sender].totalBalance >= _amount,\"not enough funds\" ) */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682066756e647300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/artifacts/struct.sol\":838:845  _amount */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":795:809  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":795:821  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":810:820  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":795:821  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":795:834  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":795:845  balanceReceive[msg.sender].totalBalance -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":856:859  _to */\n      dup2\n        /* \"contracts/artifacts/struct.sol\":856:868  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/artifacts/struct.sol\":856:877  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/artifacts/struct.sol\":869:876  _amount */\n      dup3\n        /* \"contracts/artifacts/struct.sol\":856:877  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/artifacts/struct.sol\":856:877  _to.transfer(_amount) */\n      pop\n        /* \"contracts/artifacts/struct.sol\":628:885  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/artifacts/struct.sol\":26:888  contract mappingStruct {\r... */\n    tag_12:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820b21588d04ca9147327084d3b8fe8e4e9d405a4135ae9a9a8ad6aa63580b03db564736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103a0806100206000396000f3fe6080604052600436106100295760003560e01c80636d26ec181461002e578063f274c89714610038575b600080fd5b610036610093565b005b34801561004457600080fd5b506100916004803603604081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610200565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506100ea610351565b6040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000815480929190600101919050555050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561034c573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a72315820b21588d04ca9147327084d3b8fe8e4e9d405a4135ae9a9a8ad6aa63580b03db564736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEA PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB2 ISZERO DUP9 0xD0 0x4C 0xA9 EQ PUSH20 0x27084D3B8FE8E4E9D405A4135AE9A9A8AD6AA635 DUP1 0xB0 RETURNDATASIZE 0xB5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "26:862:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:862:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80636d26ec181461002e578063f274c89714610038575b600080fd5b610036610093565b005b34801561004457600080fd5b506100916004803603604081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610200565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506100ea610351565b6040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000815480929190600101919050555050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561034c573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a72315820b21588d04ca9147327084d3b8fe8e4e9d405a4135ae9a9a8ad6aa63580b03db564736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEA PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB2 ISZERO DUP9 0xD0 0x4C 0xA9 EQ PUSH20 0x27084D3B8FE8E4E9D405A4135AE9A9A8AD6AA635 DUP1 0xB0 RETURNDATASIZE 0xB5 PUSH5 0x736F6C6343 STOP SDIV 0xD STOP ORIGIN ",
							"sourceMap": "26:862:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;309:313;;;:::i;:::-;;628:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:257:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;628:257:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;309:313;403:9;360:14;:26;375:10;360:26;;;;;;;;;;;;;;;:39;;;:52;;;;;;;;;;;423:22;;:::i;:::-;448;;;;;;;;456:9;448:22;;;;466:3;448:22;;;423:47;;556:7;481:14;:26;496:10;481:26;;;;;;;;;;;;;;;:35;;:74;517:14;:26;532:10;517:26;;;;;;;;;;;;;;;:37;;;481:74;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;574:14;:26;589:10;574:26;;;;;;;;;;;;;;;:37;;;:40;;;;;;;;;;;;;309:313;:::o;628:257::-;756:7;713:14;:26;728:10;713:26;;;;;;;;;;;;;;;:39;;;:50;;705:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:7;795:14;:26;810:10;795:26;;;;;;;;;;;;;;;:39;;;:50;;;;;;;;;;;856:3;:12;;:21;869:7;856:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;856:21:0;628:257;;:::o;26:862::-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "185600",
								"executionCost": "226",
								"totalCost": "185826"
							},
							"external": {
								"receiveMoney()": "81427",
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "MSTORE"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 888,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b21588d04ca9147327084d3b8fe8e4e9d405a4135ae9a9a8ad6aa63580b03db564736f6c634300050d0032",
									".code": [
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "SHR"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "6D26EC18"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "F274C897"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "REVERT"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "JUMPDEST"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "JUMPDEST"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "STOP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "AND"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP3"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP3"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "STOP"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 412,
											"name": "CALLVALUE"
										},
										{
											"begin": 360,
											"end": 374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "DUP1"
										},
										{
											"begin": 375,
											"end": 385,
											"name": "CALLER"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "AND"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "AND"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 386,
											"name": "KECCAK256"
										},
										{
											"begin": 360,
											"end": 399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 399,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "DUP3"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "DUP3"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "SLOAD"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "SWAP3"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "SSTORE"
										},
										{
											"begin": 360,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 423,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 423,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 423,
											"end": 445,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 423,
											"end": 445,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 423,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "MLOAD"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "DUP1"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "ADD"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "MSTORE"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "DUP1"
										},
										{
											"begin": 456,
											"end": 465,
											"name": "CALLVALUE"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "DUP2"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "MSTORE"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "ADD"
										},
										{
											"begin": 466,
											"end": 469,
											"name": "TIMESTAMP"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "DUP2"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "MSTORE"
										},
										{
											"begin": 448,
											"end": 470,
											"name": "POP"
										},
										{
											"begin": 423,
											"end": 470,
											"name": "SWAP1"
										},
										{
											"begin": 423,
											"end": 470,
											"name": "POP"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1"
										},
										{
											"begin": 496,
											"end": 506,
											"name": "CALLER"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "KECCAK256"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 481,
											"end": 516,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 531,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "AND"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MSTORE"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "ADD"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "KECCAK256"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "MSTORE"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 555,
											"name": "KECCAK256"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "DUP3"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "MLOAD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "SSTORE"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "DUP3"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "MLOAD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "SSTORE"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "CALLER"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP2"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "ADD"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "DUP2"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "ADD"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 600,
											"name": "KECCAK256"
										},
										{
											"begin": 574,
											"end": 611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 574,
											"end": 611,
											"name": "ADD"
										},
										{
											"begin": 574,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "DUP2"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SLOAD"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP3"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP2"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "ADD"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP2"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "POP"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SSTORE"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 622,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 756,
											"end": 763,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "DUP1"
										},
										{
											"begin": 728,
											"end": 738,
											"name": "CALLER"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 739,
											"name": "KECCAK256"
										},
										{
											"begin": 713,
											"end": 752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 752,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 752,
											"name": "SLOAD"
										},
										{
											"begin": 713,
											"end": 763,
											"name": "LT"
										},
										{
											"begin": 713,
											"end": 763,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "JUMPI"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MLOAD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP3"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "SUB"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP3"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "6E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "SWAP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "MLOAD"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "SWAP2"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "SUB"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "REVERT"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 705,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP1"
										},
										{
											"begin": 795,
											"end": 809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 810,
											"end": 820,
											"name": "CALLER"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "MSTORE"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "MSTORE"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 795,
											"end": 821,
											"name": "KECCAK256"
										},
										{
											"begin": 795,
											"end": 834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 795,
											"end": 834,
											"name": "ADD"
										},
										{
											"begin": 795,
											"end": 834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "DUP3"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "DUP3"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SLOAD"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SUB"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SWAP3"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SWAP1"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "SSTORE"
										},
										{
											"begin": 795,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 859,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 868,
											"name": "AND"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 869,
											"end": 876,
											"name": "DUP3"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "ISZERO"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "MUL"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "MLOAD"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP4"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "SUB"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP2"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP6"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP9"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "DUP9"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "CALL"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "SWAP4"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 628,
											"end": 885,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "POP"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 888,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"receiveMoney()": "6d26ec18",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/artifacts/struct.sol\":\"mappingStruct\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/artifacts/struct.sol\":{\"keccak256\":\"0x3aab21a1c412eec2864843d05c0b74edacfe50381b901d63706169189cfeff20\",\"urls\":[\"bzz-raw://3b4b05506a656915bc06c3042ae40d577363a0b22b66750f19aa184df9721d22\",\"dweb:/ipfs/QmZPm8Xm1AKC7N6uHyzrfHmyi6WxVtR3CgXFdxDk153BDL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/artifacts/struct.sol:mappingStruct",
								"label": "balanceReceive",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Balance)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balance)19_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct mappingStruct.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)19_storage"
							},
							"t_mapping(t_uint256,t_struct(Payment)10_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct mappingStruct.Payment)",
								"numberOfBytes": "32",
								"value": "t_struct(Payment)10_storage"
							},
							"t_struct(Balance)19_storage": {
								"encoding": "inplace",
								"label": "struct mappingStruct.Balance",
								"members": [
									{
										"astId": 12,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 14,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "numpayment",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 18,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "payments",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(Payment)10_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Payment)10_storage": {
								"encoding": "inplace",
								"label": "struct mappingStruct.Payment",
								"members": [
									{
										"astId": 7,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "timestam",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/artifacts/struct.sol": {
				"ast": {
					"absolutePath": "contracts/artifacts/struct.sol",
					"exportedSymbols": {
						"mappingStruct": [
							95
						]
					},
					"id": 96,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95
							],
							"name": "mappingStruct",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceReceive",
									"nodeType": "VariableDeclaration",
									"scope": 95,
									"src": "56:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
										"typeString": "mapping(address => struct mappingStruct.Balance)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "65:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "56:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
											"typeString": "mapping(address => struct mappingStruct.Balance)"
										},
										"valueType": {
											"contractScope": null,
											"id": 3,
											"name": "Balance",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 19,
											"src": "76:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$19_storage_ptr",
												"typeString": "struct mappingStruct.Balance"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "mappingStruct.Payment",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "132:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "132:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "timestam",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "154:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "154:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nodeType": "StructDefinition",
									"scope": 95,
									"src": "106:69:0",
									"visibility": "public"
								},
								{
									"canonicalName": "mappingStruct.Balance",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 12,
											"name": "totalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "207:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "207:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"name": "numpayment",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "235:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "235:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"name": "payments",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "261:34:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
												"typeString": "mapping(uint256 => struct mappingStruct.Payment)"
											},
											"typeName": {
												"id": 17,
												"keyType": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "261:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
													"typeString": "mapping(uint256 => struct mappingStruct.Payment)"
												},
												"valueType": {
													"contractScope": null,
													"id": 16,
													"name": "Payment",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_storage_ptr",
														"typeString": "struct mappingStruct.Payment"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nodeType": "StructDefinition",
									"scope": 95,
									"src": "181:122:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "349:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "360:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 25,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "375:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "375:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "360:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "360:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "403:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "403:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "360:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "360:52:0"
											},
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"name": "payment",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "423:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_memory_ptr",
															"typeString": "struct mappingStruct.Payment"
														},
														"typeName": {
															"contractScope": null,
															"id": 31,
															"name": "Payment",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$10_storage_ptr",
																"typeString": "struct mappingStruct.Payment"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 34,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "456:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "456:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 36,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "466:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 33,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "448:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$10_storage_ptr_$",
															"typeString": "type(struct mappingStruct.Payment storage pointer)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "448:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_memory",
														"typeString": "struct mappingStruct.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "423:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "balanceReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "481:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																		"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																	}
																},
																"id": 42,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 40,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "496:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "496:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "481:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$19_storage",
																	"typeString": "struct mappingStruct.Balance storage ref"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "payments",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "481:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
																"typeString": "mapping(uint256 => struct mappingStruct.Payment storage ref)"
															}
														},
														"id": 49,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 44,
																	"name": "balanceReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "517:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																		"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																	}
																},
																"id": 47,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 45,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 110,
																		"src": "532:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "532:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "517:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$19_storage",
																	"typeString": "struct mappingStruct.Balance storage ref"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numpayment",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "517:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "481:74:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_storage",
															"typeString": "struct mappingStruct.Payment storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_memory_ptr",
															"typeString": "struct mappingStruct.Payment memory"
														}
													},
													"src": "481:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_storage",
														"typeString": "struct mappingStruct.Payment storage ref"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "481:82:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "574:40:0",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "574:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 56,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "589:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "589:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "574:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numpayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "574:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "574:40:0"
											}
										]
									},
									"documentation": null,
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:0"
									},
									"scope": 95,
									"src": "309:313:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "694:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "balanceReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "713:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																			"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																		}
																	},
																	"id": 72,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 70,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "728:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "728:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "713:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Balance_$19_storage",
																		"typeString": "struct mappingStruct.Balance storage ref"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 12,
																"src": "713:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 74,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "713:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682066756e6473",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															},
															"value": "not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															114
														],
														"referencedDeclaration": 114,
														"src": "705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "705:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "705:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 79,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "795:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 82,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 80,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "810:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "810:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "795:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "795:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "838:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "795:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "795:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 90,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "856:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "856:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "856:21:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "652:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "673:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "651:35:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:0:0"
									},
									"scope": 95,
									"src": "628:257:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 96,
							"src": "26:862:0"
						}
					],
					"src": "0:888:0"
				},
				"id": 0
			}
		}
	}
}