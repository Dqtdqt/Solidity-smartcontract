{
	"id": "0c9abd21152138dcefdbba94d46971fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.13",
	"solcLongVersion": "0.5.13+commit.5b0b510c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/artifacts/struct.sol": {
				"content": "pragma solidity ^0.5.13;\r\ncontract mappingStruct {\r\n    mapping (address => Balance) balanceReceive;\r\n    struct Payment {\r\n        uint amount;\r\n        uint timestam;\r\n    }\r\n    struct Balance {\r\n        uint totalBalance;\r\n        uint numpayment;\r\n        mapping (uint => Payment) payments;\r\n    }\r\n    function getBalance() public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n    function receiveMoney () public payable {\r\n        balanceReceive[msg.sender].totalBalance += msg.value;\r\n        Payment memory payment = Payment(msg.value,now);\r\n        balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment]=payment;\r\n        balanceReceive[msg.sender].numpayment ++;\r\n    }\r\n    function withdrawMoney (address payable _to, uint _amount) public {\r\n        require(balanceReceive[msg.sender].totalBalance >= _amount,\"not enough funds\" );\r\n        balanceReceive[msg.sender].totalBalance -= _amount;\r\n        _to.transfer(_amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/artifacts/struct.sol": {
				"mappingStruct": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/artifacts/struct.sol\":26:989  contract mappingStruct {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/artifacts/struct.sol\":26:989  contract mappingStruct {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/artifacts/struct.sol\":26:989  contract mappingStruct {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6d26ec18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/artifacts/struct.sol\":309:404  function getBalance() public view returns (uint){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"contracts/artifacts/struct.sol\":309:404  function getBalance() public view returns (uint){\r... */\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/artifacts/struct.sol\":410:723  function receiveMoney () public payable {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/artifacts/struct.sol\":729:986  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"contracts/artifacts/struct.sol\":729:986  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"contracts/artifacts/struct.sol\":729:986  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/artifacts/struct.sol\":309:404  function getBalance() public view returns (uint){\r... */\n    tag_7:\n        /* \"contracts/artifacts/struct.sol\":352:356  uint */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":383:387  this */\n      address\n        /* \"contracts/artifacts/struct.sol\":375:396  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/artifacts/struct.sol\":368:396  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/artifacts/struct.sol\":309:404  function getBalance() public view returns (uint){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/artifacts/struct.sol\":410:723  function receiveMoney () public payable {\r... */\n    tag_9:\n        /* \"contracts/artifacts/struct.sol\":504:513  msg.value */\n      callvalue\n        /* \"contracts/artifacts/struct.sol\":461:475  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":461:487  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":476:486  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":461:487  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":461:500  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":461:513  balanceReceive[msg.sender].totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":524:546  Payment memory payment */\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/artifacts/struct.sol\":549:571  Payment(msg.value,now) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/artifacts/struct.sol\":557:566  msg.value */\n      callvalue\n        /* \"contracts/artifacts/struct.sol\":549:571  Payment(msg.value,now) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/artifacts/struct.sol\":567:570  now */\n      timestamp\n        /* \"contracts/artifacts/struct.sol\":549:571  Payment(msg.value,now) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":524:571  Payment memory payment = Payment(msg.value,now) */\n      swap1\n      pop\n        /* \"contracts/artifacts/struct.sol\":657:664  payment */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":582:596  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":582:608  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":597:607  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":582:608  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":582:617  balanceReceive[msg.sender].payments */\n      0x02\n      add\n        /* \"contracts/artifacts/struct.sol\":582:656  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment] */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":618:632  balanceReceive */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":618:644  balanceReceive[msg.sender] */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":633:643  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":618:644  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":618:655  balanceReceive[msg.sender].numpayment */\n      0x01\n      add\n      sload\n        /* \"contracts/artifacts/struct.sol\":582:656  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":582:664  balanceReceive[msg.sender].payments[balanceReceive[msg.sender].numpayment]=payment */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/artifacts/struct.sol\":675:689  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":675:701  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":690:700  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":675:701  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":675:712  balanceReceive[msg.sender].numpayment */\n      0x01\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":675:715  balanceReceive[msg.sender].numpayment ++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":410:723  function receiveMoney () public payable {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/artifacts/struct.sol\":729:986  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n    tag_13:\n        /* \"contracts/artifacts/struct.sol\":857:864  _amount */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":814:828  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":814:840  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":829:839  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":814:840  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":814:853  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      sload\n        /* \"contracts/artifacts/struct.sol\":814:864  balanceReceive[msg.sender].totalBalance >= _amount */\n      lt\n      iszero\n        /* \"contracts/artifacts/struct.sol\":806:885  require(balanceReceive[msg.sender].totalBalance >= _amount,\"not enough funds\" ) */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682066756e647300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/artifacts/struct.sol\":939:946  _amount */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":896:910  balanceReceive */\n      0x00\n        /* \"contracts/artifacts/struct.sol\":896:922  balanceReceive[msg.sender] */\n      dup1\n        /* \"contracts/artifacts/struct.sol\":911:921  msg.sender */\n      caller\n        /* \"contracts/artifacts/struct.sol\":896:922  balanceReceive[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/artifacts/struct.sol\":896:935  balanceReceive[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/artifacts/struct.sol\":896:946  balanceReceive[msg.sender].totalBalance -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/artifacts/struct.sol\":957:960  _to */\n      dup2\n        /* \"contracts/artifacts/struct.sol\":957:969  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/artifacts/struct.sol\":957:978  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/artifacts/struct.sol\":970:977  _amount */\n      dup3\n        /* \"contracts/artifacts/struct.sol\":957:978  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/artifacts/struct.sol\":957:978  _to.transfer(_amount) */\n      pop\n        /* \"contracts/artifacts/struct.sol\":729:986  function withdrawMoney (address payable _to, uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/artifacts/struct.sol\":26:989  contract mappingStruct {\r... */\n    tag_17:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820bd5310755f48e2ad92f9d5ff6e5597e0e1ec57759056625383f5d4f7eba2791d64736f6c634300050d0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103f5806100206000396000f3fe6080604052600436106100345760003560e01c806312065fe0146100395780636d26ec1814610064578063f274c8971461006e575b600080fd5b34801561004557600080fd5b5061004e6100c9565b6040518082815260200191505060405180910390f35b61006c6100e8565b005b34801561007a57600080fd5b506100c76004803603604081101561009157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610255565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555061013f6103a6565b6040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000815480929190600101919050555050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561030c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a1573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a72315820bd5310755f48e2ad92f9d5ff6e5597e0e1ec57759056625383f5d4f7eba2791d64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x255 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13F PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBD MSTORE8 LT PUSH22 0x5F48E2AD92F9D5FF6E5597E0E1EC57759056625383F5 0xD4 0xF7 0xEB LOG2 PUSH26 0x1D64736F6C634300050D00320000000000000000000000000000 ",
							"sourceMap": "26:963:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:963:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806312065fe0146100395780636d26ec1814610064578063f274c8971461006e575b600080fd5b34801561004557600080fd5b5061004e6100c9565b6040518082815260200191505060405180910390f35b61006c6100e8565b005b34801561007a57600080fd5b506100c76004803603604081101561009157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610255565b005b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555061013f6103a6565b6040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000815480929190600101919050555050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561030c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103a1573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a72315820bd5310755f48e2ad92f9d5ff6e5597e0e1ec57759056625383f5d4f7eba2791d64736f6c634300050d0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x255 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13F PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBD MSTORE8 LT PUSH22 0x5F48E2AD92F9D5FF6E5597E0E1EC57759056625383F5 0xD4 0xF7 0xEB LOG2 PUSH26 0x1D64736F6C634300050D00320000000000000000000000000000 ",
							"sourceMap": "26:963:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;410:313;;;:::i;:::-;;729:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:257:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;729:257:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;309:95;352:4;383;375:21;;;368:28;;309:95;:::o;410:313::-;504:9;461:14;:26;476:10;461:26;;;;;;;;;;;;;;;:39;;;:52;;;;;;;;;;;524:22;;:::i;:::-;549;;;;;;;;557:9;549:22;;;;567:3;549:22;;;524:47;;657:7;582:14;:26;597:10;582:26;;;;;;;;;;;;;;;:35;;:74;618:14;:26;633:10;618:26;;;;;;;;;;;;;;;:37;;;582:74;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;;675:14;:26;690:10;675:26;;;;;;;;;;;;;;;:37;;;:40;;;;;;;;;;;;;410:313;:::o;729:257::-;857:7;814:14;:26;829:10;814:26;;;;;;;;;;;;;;;:39;;;:50;;806:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:7;896:14;:26;911:10;896:26;;;;;;;;;;;;;;;:39;;;:50;;;;;;;;;;;957:3;:12;;:21;970:7;957:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;957:21:0;729:257;;:::o;26:963::-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "202600",
								"executionCost": "245",
								"totalCost": "202845"
							},
							"external": {
								"getBalance()": "596",
								"receiveMoney()": "81449",
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "MSTORE"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 989,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bd5310755f48e2ad92f9d5ff6e5597e0e1ec57759056625383f5d4f7eba2791d64736f6c634300050d0032",
									".code": [
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "SHR"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "6D26EC18"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "F274C897"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "REVERT"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "JUMPDEST"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "JUMPDEST"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "MLOAD"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "DUP3"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "DUP2"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "MSTORE"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "ADD"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "SWAP2"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "MLOAD"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "DUP1"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "SWAP2"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "SUB"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "SWAP1"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "RETURN"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "STOP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "DUP2"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "ADD"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "AND"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "ADD"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP3"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP2"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "DUP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "ADD"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP3"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP2"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "SWAP1"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "STOP"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 383,
											"end": 387,
											"name": "ADDRESS"
										},
										{
											"begin": 375,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 375,
											"end": 396,
											"name": "BALANCE"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "SWAP1"
										},
										{
											"begin": 309,
											"end": 404,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "JUMPDEST"
										},
										{
											"begin": 504,
											"end": 513,
											"name": "CALLVALUE"
										},
										{
											"begin": 461,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 476,
											"end": 486,
											"name": "CALLER"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "AND"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "AND"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "MSTORE"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "ADD"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "SWAP1"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "DUP2"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "MSTORE"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "ADD"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 461,
											"end": 487,
											"name": "KECCAK256"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "ADD"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "SLOAD"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "SWAP3"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "SSTORE"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 524,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 524,
											"end": 546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 546,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 524,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "MLOAD"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "CALLVALUE"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 570,
											"name": "TIMESTAMP"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 549,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 524,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 664,
											"name": "DUP1"
										},
										{
											"begin": 582,
											"end": 596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 597,
											"end": 607,
											"name": "CALLER"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 608,
											"name": "KECCAK256"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 618,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 643,
											"name": "CALLER"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "AND"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "AND"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "DUP2"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "MSTORE"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "ADD"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "SWAP1"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "DUP2"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "MSTORE"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "ADD"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 618,
											"end": 644,
											"name": "KECCAK256"
										},
										{
											"begin": 618,
											"end": 655,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 618,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 618,
											"end": 655,
											"name": "SLOAD"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "MSTORE"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "MSTORE"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 656,
											"name": "KECCAK256"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "DUP3"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "MLOAD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "SSTORE"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "DUP3"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "MLOAD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "DUP2"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "SSTORE"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "SWAP1"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 582,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 675,
											"end": 689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1"
										},
										{
											"begin": 690,
											"end": 700,
											"name": "CALLER"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP1"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "KECCAK256"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SLOAD"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SWAP3"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SWAP2"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SWAP1"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "SSTORE"
										},
										{
											"begin": 675,
											"end": 715,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 723,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 864,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "DUP1"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "CALLER"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 840,
											"name": "KECCAK256"
										},
										{
											"begin": 814,
											"end": 853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 853,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 853,
											"name": "SLOAD"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "LT"
										},
										{
											"begin": 814,
											"end": 864,
											"name": "ISZERO"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMPI"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MLOAD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MSTORE"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP3"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SUB"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP3"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MSTORE"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MSTORE"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "6E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MSTORE"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MLOAD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SUB"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "REVERT"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 939,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 896,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "AND"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "AND"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "MSTORE"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 896,
											"end": 922,
											"name": "KECCAK256"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "ADD"
										},
										{
											"begin": 896,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "DUP3"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "DUP3"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "SLOAD"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "SUB"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "SWAP3"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "DUP2"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "SSTORE"
										},
										{
											"begin": 896,
											"end": 946,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 970,
											"end": 977,
											"name": "DUP3"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP2"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "MUL"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SWAP1"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "MLOAD"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "MLOAD"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP4"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SUB"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP2"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP6"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP9"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP9"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "CALL"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SWAP4"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 957,
											"end": 978,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "POP"
										},
										{
											"begin": 729,
											"end": 986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "ADD"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "POP"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 989,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"receiveMoney()": "6d26ec18",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/artifacts/struct.sol\":\"mappingStruct\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/artifacts/struct.sol\":{\"keccak256\":\"0xf06531788f5d7bfbb29048ba8ebc4f4c010b2d5e1e8adf1ec66528de252e475d\",\"urls\":[\"bzz-raw://f764a859c2eb41a14310163b26b84a08509960eaf6bbb95359d7c1f3c3817d5e\",\"dweb:/ipfs/QmWDjZzpzKguyxeEr4JUdAQ6tRgyrN7sXE4BVDceuq1KXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/artifacts/struct.sol:mappingStruct",
								"label": "balanceReceive",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Balance)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balance)19_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct mappingStruct.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)19_storage"
							},
							"t_mapping(t_uint256,t_struct(Payment)10_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct mappingStruct.Payment)",
								"numberOfBytes": "32",
								"value": "t_struct(Payment)10_storage"
							},
							"t_struct(Balance)19_storage": {
								"encoding": "inplace",
								"label": "struct mappingStruct.Balance",
								"members": [
									{
										"astId": 12,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 14,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "numpayment",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 18,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "payments",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(Payment)10_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Payment)10_storage": {
								"encoding": "inplace",
								"label": "struct mappingStruct.Payment",
								"members": [
									{
										"astId": 7,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contracts/artifacts/struct.sol:mappingStruct",
										"label": "timestam",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/artifacts/struct.sol": {
				"ast": {
					"absolutePath": "contracts/artifacts/struct.sol",
					"exportedSymbols": {
						"mappingStruct": [
							106
						]
					},
					"id": 107,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "mappingStruct",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceReceive",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "56:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
										"typeString": "mapping(address => struct mappingStruct.Balance)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "65:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "56:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
											"typeString": "mapping(address => struct mappingStruct.Balance)"
										},
										"valueType": {
											"contractScope": null,
											"id": 3,
											"name": "Balance",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 19,
											"src": "76:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$19_storage_ptr",
												"typeString": "struct mappingStruct.Balance"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "mappingStruct.Payment",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "132:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "132:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "timestam",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "154:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "154:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nodeType": "StructDefinition",
									"scope": 106,
									"src": "106:69:0",
									"visibility": "public"
								},
								{
									"canonicalName": "mappingStruct.Balance",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 12,
											"name": "totalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "207:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "207:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"name": "numpayment",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "235:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "235:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"name": "payments",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "261:34:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
												"typeString": "mapping(uint256 => struct mappingStruct.Payment)"
											},
											"typeName": {
												"id": 17,
												"keyType": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "261:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
													"typeString": "mapping(uint256 => struct mappingStruct.Payment)"
												},
												"valueType": {
													"contractScope": null,
													"id": 16,
													"name": "Payment",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_storage_ptr",
														"typeString": "struct mappingStruct.Payment"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nodeType": "StructDefinition",
									"scope": 106,
									"src": "181:122:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "357:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 25,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "383:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_mappingStruct_$106",
																	"typeString": "contract mappingStruct"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_mappingStruct_$106",
																	"typeString": "contract mappingStruct"
																}
															],
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "375:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "375:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 23,
												"id": 28,
												"nodeType": "Return",
												"src": "368:28:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:6:0"
									},
									"scope": 106,
									"src": "309:95:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "450:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "461:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 36,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 34,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "476:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "476:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "461:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "461:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "504:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "461:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "461:52:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"name": "payment",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "524:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_memory_ptr",
															"typeString": "struct mappingStruct.Payment"
														},
														"typeName": {
															"contractScope": null,
															"id": 42,
															"name": "Payment",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 10,
															"src": "524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$10_storage_ptr",
																"typeString": "struct mappingStruct.Payment"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "557:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "557:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 47,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "567:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 44,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$10_storage_ptr_$",
															"typeString": "type(struct mappingStruct.Payment storage pointer)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "549:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_memory",
														"typeString": "struct mappingStruct.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "524:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 50,
																	"name": "balanceReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "582:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																		"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																	}
																},
																"id": 53,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 51,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "597:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "597:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "582:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$19_storage",
																	"typeString": "struct mappingStruct.Balance storage ref"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "payments",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "582:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$10_storage_$",
																"typeString": "mapping(uint256 => struct mappingStruct.Payment storage ref)"
															}
														},
														"id": 60,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 55,
																	"name": "balanceReceive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "618:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																		"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																	}
																},
																"id": 58,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 56,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "633:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "633:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "618:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$19_storage",
																	"typeString": "struct mappingStruct.Balance storage ref"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numpayment",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "618:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "582:74:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_storage",
															"typeString": "struct mappingStruct.Payment storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$10_memory_ptr",
															"typeString": "struct mappingStruct.Payment memory"
														}
													},
													"src": "582:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$10_storage",
														"typeString": "struct mappingStruct.Payment storage ref"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "582:82:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "675:40:0",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "675:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 67,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "690:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "690:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "675:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numpayment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "675:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "675:40:0"
											}
										]
									},
									"documentation": null,
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:0:0"
									},
									"scope": 106,
									"src": "410:313:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "795:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 80,
																		"name": "balanceReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "814:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																			"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																		}
																	},
																	"id": 83,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 81,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 121,
																			"src": "829:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "814:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Balance_$19_storage",
																		"typeString": "struct mappingStruct.Balance storage ref"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 12,
																"src": "814:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "814:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682066756e6473",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "865:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															},
															"value": "not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															125
														],
														"referencedDeclaration": 125,
														"src": "806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "806:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "806:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "balanceReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "896:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$19_storage_$",
																	"typeString": "mapping(address => struct mappingStruct.Balance storage ref)"
																}
															},
															"id": 93,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 91,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "911:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "911:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "896:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$19_storage",
																"typeString": "struct mappingStruct.Balance storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "896:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "896:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "896:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 101,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "957:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "957:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "957:21:0"
											}
										]
									},
									"documentation": null,
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "753:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "774:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "752:35:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:0"
									},
									"scope": 106,
									"src": "729:257:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 107,
							"src": "26:963:0"
						}
					],
					"src": "0:989:0"
				},
				"id": 0
			}
		}
	}
}